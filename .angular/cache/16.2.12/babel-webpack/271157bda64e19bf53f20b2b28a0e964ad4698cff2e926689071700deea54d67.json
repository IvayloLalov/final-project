{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let EditRestaurantComponent = class EditRestaurantComponent {\n  ngOnInit() {\n    this.activeRoute.params.subscribe(data => {\n      const id = data['restaurantId'];\n      this.apiService.getRestaurant(id).subscribe(restaurant => {\n        this.restaurant = restaurant;\n      });\n    });\n  }\n  constructor(fb, apiService, router, activeRoute) {\n    this.fb = fb;\n    this.apiService = apiService;\n    this.router = router;\n    this.activeRoute = activeRoute;\n    this.restaurant = {};\n    this.form = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(4)]],\n      type: ['', [Validators.required, Validators.minLength(4)]],\n      location: ['', [Validators.required, Validators.minLength(6)]],\n      image: ['', [Validators.required, Validators.pattern('https?://.*.(png|jpeg|jpg)')]],\n      description: ['', [Validators.required, Validators.minLength(10)]]\n    });\n  }\n  // addRestaurant() {\n  //   if (this.form.invalid) {\n  //     return;\n  //   }\n  //   const { name, type, location, image, description } = this.form.value;\n  //   this.api\n  //     .addRestaurant(name!, type!, location!, image!, description!)\n  //     .subscribe(() => {\n  //       this.router.navigate(['/restaurants']);\n  //     });\n  // }\n  editRestaurant() {}\n  onCancel() {\n    this.router.navigate(['/restaurants']);\n  }\n};\nEditRestaurantComponent = __decorate([Component({\n  selector: 'app-edit-restaurant',\n  templateUrl: './edit-restaurant.component.html',\n  styleUrls: ['./edit-restaurant.component.css']\n})], EditRestaurantComponent);","map":{"version":3,"names":["Component","Validators","EditRestaurantComponent","ngOnInit","activeRoute","params","subscribe","data","id","apiService","getRestaurant","restaurant","constructor","fb","router","form","group","name","required","minLength","type","location","image","pattern","description","editRestaurant","onCancel","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\SoftUni JS Angular\\Final Project\\final-project\\src\\app\\restaurant\\edit-restaurant\\edit-restaurant.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/api.service';\nimport { Restaurant } from 'src/types/restaurant';\n\n@Component({\n  selector: 'app-edit-restaurant',\n  templateUrl: './edit-restaurant.component.html',\n  styleUrls: ['./edit-restaurant.component.css'],\n})\nexport class EditRestaurantComponent implements OnInit {\n  restaurant = {} as Restaurant;\n\n  ngOnInit(): void {\n    this.activeRoute.params.subscribe((data) => {\n      const id = data['restaurantId'];\n      this.apiService.getRestaurant(id).subscribe((restaurant) => {\n        this.restaurant = restaurant;\n      });\n    });\n  }\n\n  form = this.fb.group({\n    name: ['', [Validators.required, Validators.minLength(4)]],\n    type: ['', [Validators.required, Validators.minLength(4)]],\n    location: ['', [Validators.required, Validators.minLength(6)]],\n    image: [\n      '',\n      [Validators.required, Validators.pattern('https?://.*.(png|jpeg|jpg)')],\n    ],\n    description: ['', [Validators.required, Validators.minLength(10)]],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    private router: Router,\n    private activeRoute: ActivatedRoute\n  ) {}\n  // addRestaurant() {\n  //   if (this.form.invalid) {\n  //     return;\n  //   }\n\n  //   const { name, type, location, image, description } = this.form.value;\n\n  //   this.api\n  //     .addRestaurant(name!, type!, location!, image!, description!)\n  //     .subscribe(() => {\n  //       this.router.navigate(['/restaurants']);\n  //     });\n  // }\n\n  editRestaurant() {}\n\n  onCancel(): void {\n    this.router.navigate(['/restaurants']);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,UAAU,QAAqB,gBAAgB;AAUjD,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAGlCC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,CAACC,MAAM,CAACC,SAAS,CAAEC,IAAI,IAAI;MACzC,MAAMC,EAAE,GAAGD,IAAI,CAAC,cAAc,CAAC;MAC/B,IAAI,CAACE,UAAU,CAACC,aAAa,CAACF,EAAE,CAAC,CAACF,SAAS,CAAEK,UAAU,IAAI;QACzD,IAAI,CAACA,UAAU,GAAGA,UAAU;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAaAC,YACUC,EAAe,EACfJ,UAAsB,EACtBK,MAAc,EACdV,WAA2B;IAH3B,KAAAS,EAAE,GAAFA,EAAE;IACF,KAAAJ,UAAU,GAAVA,UAAU;IACV,KAAAK,MAAM,GAANA,MAAM;IACN,KAAAV,WAAW,GAAXA,WAAW;IA1BrB,KAAAO,UAAU,GAAG,EAAgB;IAW7B,KAAAI,IAAI,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACnBC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACkB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACnB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACkB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACkB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DG,KAAK,EAAE,CACL,EAAE,EACF,CAACrB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACsB,OAAO,CAAC,4BAA4B,CAAC,CAAC,CACxE;MACDC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACvB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACkB,SAAS,CAAC,EAAE,CAAC,CAAC;KAClE,CAAC;EAOC;EACH;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEAM,cAAcA,CAAA,GAAI;EAElBC,QAAQA,CAAA;IACN,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EACxC;CACD;AAhDYzB,uBAAuB,GAAA0B,UAAA,EALnC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACW7B,uBAAuB,CAgDnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}