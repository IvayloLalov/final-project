{"ast":null,"code":"import { inject } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api.service\";\nclass PermissionsService {\n  constructor(router, api) {\n    this.router = router;\n    this.api = api;\n    this.restaurant = {};\n    this.ownerId = '';\n  }\n  canActivate(next, state) {\n    const id = next.params['restaurantId'];\n    const userId = localStorage.getItem('userId');\n    // this.api.getRestaurant(id).pipe(\n    //   tap((restaurant) => {\n    //     this.restaurant = restaurant;\n    //   })\n    // );\n    this.api.getRestaurant(id).subscribe(restaurant => {\n      this.restaurant = restaurant;\n    });\n    console.log(userId);\n    console.log(this.restaurant._ownerId);\n    return true;\n  }\n  static #_ = this.ɵfac = function PermissionsService_Factory(t) {\n    return new (t || PermissionsService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ApiService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PermissionsService,\n    factory: PermissionsService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport const IsOwnerGuard = (next, state) => {\n  return inject(PermissionsService).canActivate(next, state);\n};","map":{"version":3,"names":["inject","PermissionsService","constructor","router","api","restaurant","ownerId","canActivate","next","state","id","params","userId","localStorage","getItem","getRestaurant","subscribe","console","log","_ownerId","_","i0","ɵɵinject","i1","Router","i2","ApiService","_2","factory","ɵfac","providedIn","IsOwnerGuard"],"sources":["D:\\SoftUni JS Angular\\Final Project\\final-project\\src\\app\\guards\\isOwner.guard.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\r\nimport {\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  CanActivateFn,\r\n} from '@angular/router';\r\nimport { ApiService } from '../api.service';\r\nimport { tap } from 'rxjs';\r\nimport { Restaurant } from 'src/types/restaurant';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nclass PermissionsService {\r\n  constructor(private router: Router, private api: ApiService) {}\r\n  restaurant = {} as Restaurant;\r\n  ownerId = '';\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    const id = next.params['restaurantId'];\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    // this.api.getRestaurant(id).pipe(\r\n    //   tap((restaurant) => {\r\n    //     this.restaurant = restaurant;\r\n    //   })\r\n    // );\r\n\r\n    this.api.getRestaurant(id).subscribe((restaurant) => {\r\n      this.restaurant = restaurant;\r\n    });\r\n    console.log(userId);\r\n    console.log(this.restaurant._ownerId);\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport const IsOwnerGuard: CanActivateFn = (\r\n  next: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n): boolean => {\r\n  return inject(PermissionsService).canActivate(next, state);\r\n};\r\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;;;;AAWlD,MAGMC,kBAAkB;EACtBC,YAAoBC,MAAc,EAAUC,GAAe;IAAvC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,GAAG,GAAHA,GAAG;IAC/C,KAAAC,UAAU,GAAG,EAAgB;IAC7B,KAAAC,OAAO,GAAG,EAAE;EAFkD;EAG9DC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAE1B,MAAMC,EAAE,GAAGF,IAAI,CAACG,MAAM,CAAC,cAAc,CAAC;IACtC,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C;IACA;IACA;IACA;IACA;IAEA,IAAI,CAACV,GAAG,CAACW,aAAa,CAACL,EAAE,CAAC,CAACM,SAAS,CAAEX,UAAU,IAAI;MAClD,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC9B,CAAC,CAAC;IACFY,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;IACnBK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,UAAU,CAACc,QAAQ,CAAC;IAErC,OAAO,IAAI;EACb;EAAC,QAAAC,CAAA,G;qBAxBGnB,kBAAkB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlB1B,kBAAkB;IAAA2B,OAAA,EAAlB3B,kBAAkB,CAAA4B,IAAA;IAAAC,UAAA,EAFV;EAAM;;AA6BpB,OAAO,MAAMC,YAAY,GAAkBA,CACzCvB,IAA4B,EAC5BC,KAA0B,KACf;EACX,OAAOT,MAAM,CAACC,kBAAkB,CAAC,CAACM,WAAW,CAACC,IAAI,EAAEC,KAAK,CAAC;AAC5D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}