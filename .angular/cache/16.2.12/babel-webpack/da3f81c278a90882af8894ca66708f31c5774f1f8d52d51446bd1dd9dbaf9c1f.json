{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  get isLogged() {\n    return !!this.user;\n  }\n  constructor(http) {\n    this.http = http;\n    this.user$$ = new BehaviorSubject(undefined);\n    this.user$ = this.user$$.asObservable();\n    this.USER_KEY = '[user]';\n    this.userSubscription = this.user$.subscribe(user => {\n      this.user = user;\n    });\n  }\n  login(email, password) {\n    return this.http.post(`${environment.userUrl}/login`, {\n      email,\n      password\n    }).pipe(tap(user => this.user$$.next(user)));\n  }\n  register(username, email, password, rePassword) {\n    return this.http.post(`${environment.userUrl}/register`, {\n      username,\n      email,\n      password,\n      rePassword\n    }).pipe(tap(user => this.user$$.next(user)));\n  }\n  ngOnDestroy() {}\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","tap","environment","UserService","isLogged","user","constructor","http","user$$","undefined","user$","asObservable","USER_KEY","userSubscription","subscribe","login","email","password","post","userUrl","pipe","next","register","username","rePassword","ngOnDestroy","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\SoftUni JS Angular\\Final Project\\final-project\\src\\app\\user\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription, tap } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport { UserForAuth } from 'src/types/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService implements OnDestroy {\n  private user$$ = new BehaviorSubject<UserForAuth | undefined>(undefined);\n  private user$ = this.user$$.asObservable();\n\n  user: UserForAuth | undefined;\n  USER_KEY = '[user]';\n\n  userSubscription: Subscription;\n\n  get isLogged(): boolean {\n    return !!this.user;\n  }\n\n  constructor(private http: HttpClient) {\n    this.userSubscription = this.user$.subscribe((user) => {\n      this.user = user;\n    });\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post<UserForAuth>(`${environment.userUrl}/login`, { email, password })\n      .pipe(tap((user) => this.user$$.next(user)));\n  }\n\n  register(\n    username: string,\n    email: string,\n    password: string,\n    rePassword: string\n  ) {\n    return this.http\n      .post<UserForAuth>(`${environment.userUrl}/register`, {\n        username,\n        email,\n        password,\n        rePassword,\n      })\n      .pipe(tap((user) => this.user$$.next(user)));\n  }\n\n  ngOnDestroy(): void {}\n}\n"],"mappings":"AAEA,SAASA,eAAe,EAAgBC,GAAG,QAAQ,MAAM;AACzD,SAASC,WAAW,QAAQ,0CAA0C;;;AAMtE,OAAM,MAAOC,WAAW;EAStB,IAAIC,QAAQA,CAAA;IACV,OAAO,CAAC,CAAC,IAAI,CAACC,IAAI;EACpB;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAZhB,KAAAC,MAAM,GAAG,IAAIR,eAAe,CAA0BS,SAAS,CAAC;IAChE,KAAAC,KAAK,GAAG,IAAI,CAACF,MAAM,CAACG,YAAY,EAAE;IAG1C,KAAAC,QAAQ,GAAG,QAAQ;IASjB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,KAAK,CAACI,SAAS,CAAET,IAAI,IAAI;MACpD,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;EACJ;EAEAU,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACV,IAAI,CACbW,IAAI,CAAc,GAAGhB,WAAW,CAACiB,OAAO,QAAQ,EAAE;MAAEH,KAAK;MAAEC;IAAQ,CAAE,CAAC,CACtEG,IAAI,CAACnB,GAAG,CAAEI,IAAI,IAAK,IAAI,CAACG,MAAM,CAACa,IAAI,CAAChB,IAAI,CAAC,CAAC,CAAC;EAChD;EAEAiB,QAAQA,CACNC,QAAgB,EAChBP,KAAa,EACbC,QAAgB,EAChBO,UAAkB;IAElB,OAAO,IAAI,CAACjB,IAAI,CACbW,IAAI,CAAc,GAAGhB,WAAW,CAACiB,OAAO,WAAW,EAAE;MACpDI,QAAQ;MACRP,KAAK;MACLC,QAAQ;MACRO;KACD,CAAC,CACDJ,IAAI,CAACnB,GAAG,CAAEI,IAAI,IAAK,IAAI,CAACG,MAAM,CAACa,IAAI,CAAChB,IAAI,CAAC,CAAC,CAAC;EAChD;EAEAoB,WAAWA,CAAA,GAAU;EAAC,QAAAC,CAAA,G;qBAzCXvB,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX5B,WAAW;IAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}