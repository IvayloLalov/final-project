{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CurrentRestaurantComponent = class CurrentRestaurantComponent {\n  constructor(apiService, userService, activeRoute, router) {\n    this.apiService = apiService;\n    this.userService = userService;\n    this.activeRoute = activeRoute;\n    this.router = router;\n    this.restaurant = {};\n    this.isOwner = false;\n    this.comments = [];\n  }\n  get isLoggedIn() {\n    return this.userService.isLoggedIn;\n  }\n  ngOnInit() {\n    this.activeRoute.params.subscribe(data => {\n      const id = data['restaurantId'];\n      this.apiService.getRestaurant(id).subscribe(restaurant => {\n        this.restaurant = restaurant;\n        console.log(this.restaurant);\n        this.apiService.getCommentService().subscribe(comment => {\n          this.comments = comment;\n          console.log(this.comments);\n        });\n        localStorage.setItem('ownerId', restaurant._ownerId);\n        this.isOwner = this.userService.user?._id === restaurant._ownerId;\n      });\n    });\n    console.log();\n  }\n  removeRestaurant() {\n    this.activeRoute.params.subscribe(data => {\n      const id = data['restaurantId'];\n      this.apiService.deleteRestaurant(id).subscribe({\n        next: () => {\n          this.router.navigate(['/restaurants']);\n        },\n        error: () => {\n          this.router.navigate(['/restaurants']);\n        }\n      });\n    });\n  }\n};\nCurrentRestaurantComponent = __decorate([Component({\n  selector: 'app-current-restaurant',\n  templateUrl: './current-restaurant.component.html',\n  styleUrls: ['./current-restaurant.component.css']\n})], CurrentRestaurantComponent);","map":{"version":3,"names":["Component","CurrentRestaurantComponent","constructor","apiService","userService","activeRoute","router","restaurant","isOwner","comments","isLoggedIn","ngOnInit","params","subscribe","data","id","getRestaurant","console","log","getCommentService","comment","localStorage","setItem","_ownerId","user","_id","removeRestaurant","deleteRestaurant","next","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\SoftUni JS Angular\\Final Project\\final-project\\src\\app\\restaurant\\current-restaurant\\current-restaurant.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/api.service';\nimport { UserService } from 'src/app/user/user.service';\nimport { Restaurant } from 'src/types/restaurant';\nimport { Comment } from 'src/types/comment';\n\n@Component({\n  selector: 'app-current-restaurant',\n  templateUrl: './current-restaurant.component.html',\n  styleUrls: ['./current-restaurant.component.css'],\n})\nexport class CurrentRestaurantComponent implements OnInit {\n  restaurant = {} as Restaurant;\n  isOwner: boolean = false;\n  comments: Comment[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private userService: UserService,\n    private activeRoute: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  get isLoggedIn(): boolean {\n    return this.userService.isLoggedIn;\n  }\n\n  ngOnInit(): void {\n    this.activeRoute.params.subscribe((data) => {\n      const id = data['restaurantId'];\n      this.apiService.getRestaurant(id).subscribe((restaurant) => {\n        this.restaurant = restaurant;\n        console.log(this.restaurant);\n\n        this.apiService.getCommentService().subscribe((comment) => {\n          this.comments = comment;\n\n          console.log(this.comments);\n        });\n        localStorage.setItem('ownerId', restaurant._ownerId);\n        this.isOwner = this.userService.user?._id === restaurant._ownerId;\n      });\n    });\n    console.log();\n  }\n\n  removeRestaurant() {\n    this.activeRoute.params.subscribe((data) => {\n      const id = data['restaurantId'];\n      this.apiService.deleteRestaurant(id).subscribe({\n        next: () => {\n          this.router.navigate(['/restaurants']);\n        },\n        error: () => {\n          this.router.navigate(['/restaurants']);\n        },\n      });\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,WAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAKrCC,YACUC,UAAsB,EACtBC,WAAwB,EACxBC,WAA2B,EAC3BC,MAAc;IAHd,KAAAH,UAAU,GAAVA,UAAU;IACV,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IARhB,KAAAC,UAAU,GAAG,EAAgB;IAC7B,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,QAAQ,GAAc,EAAE;EAOrB;EAEH,IAAIC,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACN,WAAW,CAACM,UAAU;EACpC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACN,WAAW,CAACO,MAAM,CAACC,SAAS,CAAEC,IAAI,IAAI;MACzC,MAAMC,EAAE,GAAGD,IAAI,CAAC,cAAc,CAAC;MAC/B,IAAI,CAACX,UAAU,CAACa,aAAa,CAACD,EAAE,CAAC,CAACF,SAAS,CAAEN,UAAU,IAAI;QACzD,IAAI,CAACA,UAAU,GAAGA,UAAU;QAC5BU,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,UAAU,CAAC;QAE5B,IAAI,CAACJ,UAAU,CAACgB,iBAAiB,EAAE,CAACN,SAAS,CAAEO,OAAO,IAAI;UACxD,IAAI,CAACX,QAAQ,GAAGW,OAAO;UAEvBH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,QAAQ,CAAC;QAC5B,CAAC,CAAC;QACFY,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEf,UAAU,CAACgB,QAAQ,CAAC;QACpD,IAAI,CAACf,OAAO,GAAG,IAAI,CAACJ,WAAW,CAACoB,IAAI,EAAEC,GAAG,KAAKlB,UAAU,CAACgB,QAAQ;MACnE,CAAC,CAAC;IACJ,CAAC,CAAC;IACFN,OAAO,CAACC,GAAG,EAAE;EACf;EAEAQ,gBAAgBA,CAAA;IACd,IAAI,CAACrB,WAAW,CAACO,MAAM,CAACC,SAAS,CAAEC,IAAI,IAAI;MACzC,MAAMC,EAAE,GAAGD,IAAI,CAAC,cAAc,CAAC;MAC/B,IAAI,CAACX,UAAU,CAACwB,gBAAgB,CAACZ,EAAE,CAAC,CAACF,SAAS,CAAC;QAC7Ce,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC;QACDC,KAAK,EAAEA,CAAA,KAAK;UACV,IAAI,CAACxB,MAAM,CAACuB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;QACxC;OACD,CAAC;IACJ,CAAC,CAAC;EACJ;CACD;AAhDY5B,0BAA0B,GAAA8B,UAAA,EALtC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,C,EACWjC,0BAA0B,CAgDtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}