{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { RestaurantsListComponent } from './restaurants-list/restaurants-list.component';\nimport { AddRestaurantComponent } from './add-restaurant/add-restaurant.component';\nimport { CurrentRestaurantComponent } from './current-restaurant/current-restaurant.component';\nimport { AuthGuard } from '../guards/auth.guard';\nimport { EditRestaurantComponent } from './edit-restaurant/edit-restaurant.component';\nimport { IsOwnerGuard } from '../guards/isOwner.guard';\nimport { AddCommentComponent } from './add-comment/add-comment.component';\nimport { SearchComponent } from './search/search.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'restaurants',\n  children: [{\n    path: '',\n    pathMatch: 'full',\n    component: RestaurantsListComponent\n  }, {\n    path: ':restaurantId',\n    component: CurrentRestaurantComponent\n  }, {\n    path: ':restaurantId/edit',\n    component: EditRestaurantComponent,\n    canActivate: [IsOwnerGuard]\n  }, {\n    path: ':restaurantId/add-comment',\n    component: AddCommentComponent,\n    canActivate: [AuthGuard]\n  }]\n}, {\n  path: 'add-restaurant',\n  component: AddRestaurantComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'search',\n  component: SearchComponent\n}];\nexport class ReastaurantRoutingModule {\n  static #_ = this.ɵfac = function ReastaurantRoutingModule_Factory(t) {\n    return new (t || ReastaurantRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: ReastaurantRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forChild(routes), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ReastaurantRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","RestaurantsListComponent","AddRestaurantComponent","CurrentRestaurantComponent","AuthGuard","EditRestaurantComponent","IsOwnerGuard","AddCommentComponent","SearchComponent","routes","path","children","pathMatch","component","canActivate","ReastaurantRoutingModule","_","_2","_3","forChild","imports","i1","exports"],"sources":["D:\\SoftUni JS Angular\\Final Project\\final-project\\src\\app\\restaurant\\restaurant-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RestaurantsListComponent } from './restaurants-list/restaurants-list.component';\r\nimport { AddRestaurantComponent } from './add-restaurant/add-restaurant.component';\r\nimport { CurrentRestaurantComponent } from './current-restaurant/current-restaurant.component';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\nimport { EditRestaurantComponent } from './edit-restaurant/edit-restaurant.component';\r\nimport { IsOwnerGuard } from '../guards/isOwner.guard';\r\nimport { AddCommentComponent } from './add-comment/add-comment.component';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'restaurants',\r\n    children: [\r\n      { path: '', pathMatch: 'full', component: RestaurantsListComponent },\r\n      {\r\n        path: ':restaurantId',\r\n        component: CurrentRestaurantComponent,\r\n      },\r\n      {\r\n        path: ':restaurantId/edit',\r\n        component: EditRestaurantComponent,\r\n        canActivate: [IsOwnerGuard],\r\n      },\r\n      {\r\n        path: ':restaurantId/add-comment',\r\n        component: AddCommentComponent,\r\n        canActivate: [AuthGuard],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'add-restaurant',\r\n    component: AddRestaurantComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'search',\r\n    component: SearchComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ReastaurantRoutingModule {}\r\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,wBAAwB,QAAQ,+CAA+C;AACxF,SAASC,sBAAsB,QAAQ,2CAA2C;AAClF,SAASC,0BAA0B,QAAQ,mDAAmD;AAC9F,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,uBAAuB,QAAQ,6CAA6C;AACrF,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,mBAAmB,QAAQ,qCAAqC;AACzE,SAASC,eAAe,QAAQ,2BAA2B;;;AAE3D,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,CACR;IAAED,IAAI,EAAE,EAAE;IAAEE,SAAS,EAAE,MAAM;IAAEC,SAAS,EAAEZ;EAAwB,CAAE,EACpE;IACES,IAAI,EAAE,eAAe;IACrBG,SAAS,EAAEV;GACZ,EACD;IACEO,IAAI,EAAE,oBAAoB;IAC1BG,SAAS,EAAER,uBAAuB;IAClCS,WAAW,EAAE,CAACR,YAAY;GAC3B,EACD;IACEI,IAAI,EAAE,2BAA2B;IACjCG,SAAS,EAAEN,mBAAmB;IAC9BO,WAAW,EAAE,CAACV,SAAS;GACxB;CAEJ,EACD;EACEM,IAAI,EAAE,gBAAgB;EACtBG,SAAS,EAAEX,sBAAsB;EACjCY,WAAW,EAAE,CAACV,SAAS;CACxB,EACD;EACEM,IAAI,EAAE,QAAQ;EACdG,SAAS,EAAEL;CACZ,CACF;AAMD,OAAM,MAAOO,wBAAwB;EAAA,QAAAC,CAAA,G;qBAAxBD,wBAAwB;EAAA;EAAA,QAAAE,EAAA,G;UAAxBF;EAAwB;EAAA,QAAAG,EAAA,G;cAHzBlB,YAAY,CAACmB,QAAQ,CAACV,MAAM,CAAC,EAC7BT,YAAY;EAAA;;;2EAEXe,wBAAwB;IAAAK,OAAA,GAAAC,EAAA,CAAArB,YAAA;IAAAsB,OAAA,GAFzBtB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}