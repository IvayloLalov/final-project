{"ast":null,"code":"import { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  getRestaurants() {\n    const {\n      dataUrl\n    } = environment;\n    return this.http.get(`${dataUrl}/restaurants`);\n  }\n  addRestaurant(name, type, location, img, description) {\n    const {\n      dataUrl\n    } = environment;\n    return this.http.post(`${dataUrl}/restaurants`, {\n      name,\n      type,\n      location,\n      img,\n      description\n    });\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ApiService","constructor","http","getRestaurants","dataUrl","get","addRestaurant","name","type","location","img","description","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\SoftUni JS Angular\\Final Project\\final-project\\src\\app\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.development';\nimport { Restaurant, Test } from 'src/types/restaurant';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  getRestaurants() {\n    const { dataUrl } = environment;\n\n    return this.http.get<Test[]>(`${dataUrl}/restaurants`);\n  }\n\n  addRestaurant(\n    name: string,\n    type: string,\n    location: string,\n    img: string,\n    description: string\n  ) {\n    const { dataUrl } = environment;\n    return this.http.post<Restaurant>(`${dataUrl}/restaurants`, {\n      name,\n      type,\n      location,\n      img,\n      description,\n    });\n  }\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,0CAA0C;;;AAMtE,OAAM,MAAOC,UAAU;EACrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,cAAcA,CAAA;IACZ,MAAM;MAAEC;IAAO,CAAE,GAAGL,WAAW;IAE/B,OAAO,IAAI,CAACG,IAAI,CAACG,GAAG,CAAS,GAAGD,OAAO,cAAc,CAAC;EACxD;EAEAE,aAAaA,CACXC,IAAY,EACZC,IAAY,EACZC,QAAgB,EAChBC,GAAW,EACXC,WAAmB;IAEnB,MAAM;MAAEP;IAAO,CAAE,GAAGL,WAAW;IAC/B,OAAO,IAAI,CAACG,IAAI,CAACU,IAAI,CAAa,GAAGR,OAAO,cAAc,EAAE;MAC1DG,IAAI;MACJC,IAAI;MACJC,QAAQ;MACRC,GAAG;MACHC;KACD,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBAxBUb,UAAU,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVlB,UAAU;IAAAmB,OAAA,EAAVnB,UAAU,CAAAoB,IAAA;IAAAC,UAAA,EAFT;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}