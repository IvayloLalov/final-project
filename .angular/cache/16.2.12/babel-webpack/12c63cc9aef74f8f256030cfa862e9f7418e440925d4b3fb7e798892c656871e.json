{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nexport const IsOwnerGuard = (route, state) => {\n  const router = inject(Router);\n  const userId = localStorage.getItem('userId');\n  const ownerId = localStorage.getItem('ownerId');\n  const isTheOwner = ownerId === userId;\n  console.log('ownerId', ownerId);\n  console.log('userId', userId);\n  console.log('isOwner', isTheOwner);\n  if (!isTheOwner) {\n    router.navigate(['home']);\n    return false;\n  } else {\n    return true;\n  }\n};","map":{"version":3,"names":["inject","Router","IsOwnerGuard","route","state","router","userId","localStorage","getItem","ownerId","isTheOwner","console","log","navigate"],"sources":["D:\\SoftUni JS Angular\\Final Project\\final-project\\src\\app\\guards\\isOwner.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\n\r\nexport const IsOwnerGuard: CanActivateFn = (route, state) => {\r\n  const router = inject(Router);\r\n\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  const ownerId = localStorage.getItem('ownerId');\r\n  const isTheOwner = ownerId === userId;\r\n  console.log('ownerId', ownerId);\r\n  console.log('userId', userId);\r\n\r\n  console.log('isOwner', isTheOwner);\r\n\r\n  if (!isTheOwner) {\r\n    router.navigate(['home']);\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AAEvD,OAAO,MAAMC,YAAY,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAC1D,MAAMC,MAAM,GAAGL,MAAM,CAACC,MAAM,CAAC;EAE7B,MAAMK,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE7C,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC/C,MAAME,UAAU,GAAGD,OAAO,KAAKH,MAAM;EACrCK,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,OAAO,CAAC;EAC/BE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,MAAM,CAAC;EAE7BK,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,UAAU,CAAC;EAElC,IAAI,CAACA,UAAU,EAAE;IACfL,MAAM,CAACQ,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;IACzB,OAAO,KAAK;GACb,MAAM;IACL,OAAO,IAAI;;AAEf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}